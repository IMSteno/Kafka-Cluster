name = R2R_Ingestion
connector.class = io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector
tasks.max = 1
topic = file_R2R
offset.strategy = name
filters = ParseLine, heartRateToInt, rrLenToInt, TimestampToInt
internal.kafka.reporter.bootstrap.servers = kafka1:19092
fs.scan.filters = 
fs.scan.directory.path = /tmp/input_files/R2R/
fs.cleanup.policy.class = io.streamthoughts.kafka.connect.filepulse.clean.LogCleanupPolicy
filters.heartRateToInt.field = heartRate
skip.headers = 1
filters.ParseLine.extractColumnName = headers
filters.ParseLine.type = io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter
filters.heartRateToInt.to = INTEGER
filters.heartRateToInt.type = io.streamthoughts.kafka.connect.filepulse.filter.ConvertFilter
filters.ParseLine.separator = ;
filters.ParseLine.trimColumn = true
filters.rrLenToInt.type = io.streamthoughts.kafka.connect.filepulse.filter.ConvertFilter
filters.rrLenToInt.field = rrLen
filters.rrLenToInt.to = INTEGER
filters.TimestampToInt.type = io.streamthoughts.kafka.connect.filepulse.filter.ConvertFilter
filters.TimestampToInt.field = timestamp
filters.TimestampToInt.to = LONG