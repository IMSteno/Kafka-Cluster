name = Orientation_Ingestion
connector.class = io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector
tasks.max = 1
topic = file_ORIENT
offset.strategy = name
filters = ParseLine, SetKey, orientationToInt, TimestampToInt
internal.kafka.reporter.bootstrap.servers = kafka1:19092
fs.scan.filters = 
fs.scan.directory.path = /tmp/input_files/ORIENT/
fs.cleanup.policy.class = io.streamthoughts.kafka.connect.filepulse.clean.LogCleanupPolicy
filters.orientationToInt.field = orientation
skip.headers = 1
filters.ParseLine.extractColumnName = headers
filters.ParseLine.type = io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter
filters.orientationToInt.to = INTEGER
filters.orientationToInt.type = io.streamthoughts.kafka.connect.filepulse.filter.ConvertFilter
filters.ParseLine.separator = ;
filters.ParseLine.trimColumn = true
filters.TimestampToInt.type = io.streamthoughts.kafka.connect.filepulse.filter.ConvertFilter
filters.TimestampToInt.field = timestamp
filters.TimestampToInt.to = LONG
key.converter = io.confluent.connect.avro.AvroConverter
value.converter = io.confluent.connect.avro.AvroConverter
key.converter.schema.registry.url = http://kafka-schema-registry:8081/
value.converter.schema.registry.url = http://kafka-schema-registry:8081/
filters.SetKey.type = io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter
filters.SetKey.field = $key
filters.SetKey.value = {{$value.timestamp}}